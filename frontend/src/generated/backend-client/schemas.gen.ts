// This file is auto-generated by @hey-api/openapi-ts

export const TokenResponseSchemaSchema = {
    properties: {
        detail: {
            title: 'Detail',
            type: 'string'
        },
        access: {
            title: 'Access',
            type: 'string'
        }
    },
    required: ['detail', 'access'],
    title: 'TokenResponseSchema',
    type: 'object'
} as const;

export const MyTokenObtainPairSchemaSchema = {
    properties: {
        password: {
            maxLength: 128,
            title: 'Password',
            type: 'string'
        },
        email: {
            maxLength: 255,
            title: 'Email',
            type: 'string'
        }
    },
    required: ['password', 'email'],
    title: 'MyTokenObtainPairSchema',
    type: 'object'
} as const;

export const UserSchemaSchema = {
    properties: {
        first_name: {
            title: 'First Name',
            type: 'string'
        },
        last_name: {
            title: 'Last Name',
            type: 'string'
        },
        email: {
            title: 'Email',
            type: 'string'
        }
    },
    required: ['first_name', 'last_name', 'email'],
    title: 'UserSchema',
    type: 'object'
} as const;

export const UserCreateSchemaSchema = {
    properties: {
        email: {
            title: 'Email',
            type: 'string'
        },
        password: {
            title: 'Password',
            type: 'string'
        },
        re_password: {
            title: 'Re Password',
            type: 'string'
        },
        first_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'First Name'
        },
        last_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Name'
        }
    },
    required: ['email', 'password', 're_password', 'first_name', 'last_name'],
    title: 'UserCreateSchema',
    type: 'object'
} as const;

export const SocialAuthSchemaSchema = {
    description: 'Schema for social authentication',
    properties: {
        credential: {
            title: 'Credential',
            type: 'string'
        },
        provider: {
            default: 'google',
            title: 'Provider',
            type: 'string'
        }
    },
    required: ['credential'],
    title: 'SocialAuthSchema',
    type: 'object'
} as const;

export const PlanSchemaSchema = {
    properties: {
        id: {
            title: 'Id',
            type: 'integer'
        },
        name: {
            title: 'Name',
            type: 'string'
        },
        price: {
            anyOf: [
                {
                    type: 'number'
                },
                {
                    type: 'string'
                }
            ],
            title: 'Price'
        },
        currency: {
            title: 'Currency',
            type: 'string'
        },
        description: {
            title: 'Description',
            type: 'string'
        },
        features: {
            items: {
                type: 'string'
            },
            title: 'Features',
            type: 'array'
        },
        is_active: {
            title: 'Is Active',
            type: 'boolean'
        }
    },
    required: ['id', 'name', 'price', 'currency', 'description', 'features', 'is_active'],
    title: 'PlanSchema',
    type: 'object'
} as const;

export const SubscriptionSchemaSchema = {
    properties: {
        id: {
            title: 'Id',
            type: 'integer'
        },
        plan: {
            '$ref': '#/components/schemas/PlanSchema'
        },
        status: {
            title: 'Status',
            type: 'string'
        },
        current_period_start: {
            format: 'date-time',
            title: 'Current Period Start',
            type: 'string'
        },
        current_period_end: {
            format: 'date-time',
            title: 'Current Period End',
            type: 'string'
        },
        cancel_at_period_end: {
            title: 'Cancel At Period End',
            type: 'boolean'
        }
    },
    required: ['id', 'plan', 'status', 'current_period_start', 'current_period_end', 'cancel_at_period_end'],
    title: 'SubscriptionSchema',
    type: 'object'
} as const;

export const UserSubscriptionSchemaSchema = {
    properties: {
        has_active_subscription: {
            title: 'Has Active Subscription',
            type: 'boolean'
        },
        subscription: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/SubscriptionSchema'
                },
                {
                    type: 'null'
                }
            ]
        },
        plan_name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Plan Name'
        }
    },
    required: ['has_active_subscription'],
    title: 'UserSubscriptionSchema',
    type: 'object'
} as const;

export const CheckoutSessionResponseSchemaSchema = {
    properties: {
        session_id: {
            title: 'Session Id',
            type: 'string'
        },
        session_url: {
            title: 'Session Url',
            type: 'string'
        }
    },
    required: ['session_id', 'session_url'],
    title: 'CheckoutSessionResponseSchema',
    type: 'object'
} as const;

export const CreateCheckoutSessionSchemaSchema = {
    properties: {
        plan_id: {
            title: 'Plan Id',
            type: 'integer'
        },
        success_url: {
            title: 'Success Url',
            type: 'string'
        },
        cancel_url: {
            title: 'Cancel Url',
            type: 'string'
        }
    },
    required: ['plan_id', 'success_url', 'cancel_url'],
    title: 'CreateCheckoutSessionSchema',
    type: 'object'
} as const;

export const CancelSubscriptionResponseSchemaSchema = {
    properties: {
        success: {
            title: 'Success',
            type: 'boolean'
        },
        message: {
            title: 'Message',
            type: 'string'
        }
    },
    required: ['success', 'message'],
    title: 'CancelSubscriptionResponseSchema',
    type: 'object'
} as const;

export const CancelSubscriptionSchemaSchema = {
    properties: {
        subscription_id: {
            title: 'Subscription Id',
            type: 'string'
        }
    },
    required: ['subscription_id'],
    title: 'CancelSubscriptionSchema',
    type: 'object'
} as const;

export const CustomerPortalResponseSchemaSchema = {
    properties: {
        session_url: {
            title: 'Session Url',
            type: 'string'
        }
    },
    required: ['session_url'],
    title: 'CustomerPortalResponseSchema',
    type: 'object'
} as const;

export const CustomerPortalSchemaSchema = {
    properties: {
        return_url: {
            title: 'Return Url',
            type: 'string'
        }
    },
    required: ['return_url'],
    title: 'CustomerPortalSchema',
    type: 'object'
} as const;

export const TokenObtainPairOutputSchemaSchema = {
    properties: {
        email: {
            maxLength: 255,
            title: 'Email',
            type: 'string'
        },
        refresh: {
            title: 'Refresh',
            type: 'string'
        },
        access: {
            title: 'Access',
            type: 'string'
        }
    },
    required: ['email', 'refresh', 'access'],
    title: 'TokenObtainPairOutputSchema',
    type: 'object'
} as const;

export const TokenObtainPairInputSchemaSchema = {
    properties: {
        password: {
            maxLength: 128,
            title: 'Password',
            type: 'string'
        },
        email: {
            maxLength: 255,
            title: 'Email',
            type: 'string'
        }
    },
    required: ['password', 'email'],
    title: 'TokenObtainPairInputSchema',
    type: 'object'
} as const;

export const TokenRefreshOutputSchemaSchema = {
    properties: {
        refresh: {
            title: 'Refresh',
            type: 'string'
        },
        access: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Access'
        }
    },
    required: ['refresh', 'access'],
    title: 'TokenRefreshOutputSchema',
    type: 'object'
} as const;

export const TokenRefreshInputSchemaSchema = {
    properties: {
        refresh: {
            title: 'Refresh',
            type: 'string'
        }
    },
    required: ['refresh'],
    title: 'TokenRefreshInputSchema',
    type: 'object'
} as const;

export const SchemaSchema = {
    properties: {},
    title: 'Schema',
    type: 'object'
} as const;

export const TokenVerifyInputSchemaSchema = {
    properties: {
        token: {
            title: 'Token',
            type: 'string'
        }
    },
    required: ['token'],
    title: 'TokenVerifyInputSchema',
    type: 'object'
} as const;